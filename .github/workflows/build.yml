name: capi CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install Gcc 9
        run: |
          sudo apt install -yqq gcc-9 g++-9
          export CC=gcc-9
          export CXX=g++-9
      - name: Install Cmake
        run: python -m pip install --no-cache-dir cmake==3.16.8
      - name: S2 deps
        run: sudo apt install libgflags-dev libgoogle-glog-dev libgtest-dev libssl-dev git
      - name: S2
        run: |
          git clone https://github.com/google/s2geometry.git
          cd s2geometry
          git reset --hard 4c7cdae4eb7345fc8824c08af6b8d9581bf8febb
          mkdir build
          cd build
          cmake ..
          make
          sudo make install
          cd ../..
      - name: Install TBB
        run: sudo apt install -yqq libtbb-dev
      - name: Install Python Dependencies
        run: |
          python -m pip install --no-cache-dir cython wheel
          python -m pip install --no-cache-dir -r requirements_test.txt
      - name: Build C++ backend library
        run: |
          mkdir build
          cd build
          cmake -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ..
          make
          cp _vis_graph.*.so ../capi/src/implementation/visibility_graphs/
          cd ..
      - name: Run C++ tests
        run: |
          ./build/capi_test
          gcov ../capi/test/test_main.cpp
      - name: Run Python tests
        run: python run_tests.py
      - name: Coverage report
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${{ secrets.CODECOV_TOKEN }} -f python-test-out.xml
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        if: success() && github.ref == 'refs/heads/main'
        run: >-
          python -m
          build
          --sdist
          --outdir dist/
          .
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: success() && github.ref == 'refs/heads/main'
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
