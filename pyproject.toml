[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "pybind11~=2.6.0",
    "cmake",
    "scikit-build",
]
build-backend = "setuptools.build_meta"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
profile = "black"
skip = [
    '.bzr',
    '.direnv',
    '.eggs',
    '.git',
    '.hg',
    '.mypy_cache',
    '.nox',
    '.pants.d',
    '.svn',
    '.tox',
    '.venv',
    '_build',
    'buck-out',
    'build',
    'dist',
    'node_modules',
    'venv'
]

[tool.black]
line_length = 120
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.hypothesis
    | \.idea
    | _build
    | buck-out
    | build
    | dist
    | third_party
  )/
)
'''

[tool.pylint.MASTER]
# ignore=
persistent = "yes"
jobs = 4
unsafe-load-any-extension = "no"
extension-pkg-whitelist= "lxml.etree,cv2,logging"

[tool.pylint.'MESSAGES CONTROL']
enable="wildcard-import"
disable = [
    "attribute-defined-outside-init",
    "duplicate-code",
    "super-init-not-called",
    "missing-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    "protected-access",
    "no-member",
    "too-few-public-methods",
    "import-error",
    "fixme",
    "bad-continuation",
    "ungrouped-imports"
]

[tool.pylint.'REPORTS']
output-format="colorized"
files-output="n"
reports="n"
evaluation="10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"

[tool.pylint.'LOGGING']
logging-modules='logging'

[tool.pylint.'MISCELLANEOUS']
notes="FIXME,XXX,TODO,todo"

[tool.pylint.'SIMILARITIES']
min-similarity-lines=4
ignore-comments="yes"
ignore-docstrings="yes"
ignore-imports="no"

[tool.pylint.'VARIABLES']
init-import="no"
dummy-variables-rgx="_$|dummy"
callbacks="cb_,_cb"

[tool.pylint.'FORMAT']
max-line-length=120
ignore-long-lines='^\s*(# )?<?https?://\S+>?$|from.+|import.+|'
single-line-if-stmt="no"
no-space-check="trailing-comma,dict-separator"
max-module-lines=2000
indent-string='    '
indent-after-paren=4

[tool.pylint.'BASIC']
bad-functions="map,filter,input,test"
good-names="i,j,k,ex,Run,_,x,y,z,fp,v"
bad-names="foo,bar,baz,toto,tutu,tata"
include-naming-hint="no"
function-rgx="[a-z_][a-z0-9_]{2,}$"
function-name-hint="[a-z_][a-z0-9_]{2,}$"
variable-rgx="[a-z_][a-z0-9_]{2,50}$"
variable-name-hint="[a-z_][a-z0-9_]{2,}$"
const-rgx="(([A-Z_][A-Z0-9_]*)|(__.*__))$"
const-name-hint="(([A-Z_][A-Z0-9_]*)|(__.*__))$"
attr-rgx="[a-z_][a-z0-9_]{2,}$"
attr-name-hint="[a-z_][a-z0-9_]{2,}$"
argument-rgx="[a-z_][a-z0-9_]{2,}$"
argument-name-hint="[a-z_][a-z0-9_]{2,}$"
class-attribute-rgx="([A-Za-z_][A-Za-z0-9_]{2,}|(__.*__))$"
class-attribute-name-hint="([A-Za-z_][A-Za-z0-9_]{2,}|(__.*__))$"
inlinevar-rgx="[A-Za-z_][A-Za-z0-9_]*$"
inlinevar-name-hint="[A-Za-z_][A-Za-z0-9_]*$"
class-rgx="[A-Z_][a-zA-Z0-9]+$"
class-name-hint="[A-Z_][a-zA-Z0-9]+$"
module-rgx="(([a-z_][a-z0-9_(HTML|JSON|XML)]*[a-z0-9_]*)|([A-Z][a-zA-Z0-9(HTML|JSON|XML)]+[a-zA-Z0-9]*))$"
module-name-hint="(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$"
method-rgx="[a-z_][a-z0-9_]{2,}$"
method-name-hint="[a-z_][a-z0-9_]{2,}$"
no-docstring-rgx="__.*__"
docstring-min-length=200
property-classes="abc.abstractproperty"


[tool.pylint.'TYPECHECK']
ignore-mixin-members="yes"
ignored-modules="cv2"
ignored-classes="SQLObject, optparse.Values, thread._local, _thread._local"
generated-members="REQUEST,acl_users,aq_parent"
contextmanager-decorators="contextlib.contextmanager"

[tool.pylint.'DESIGN']
max-args=10
ignored-argument-names="_.*"
max-locals=25
max-returns=11
max-branches=26
max-statements=100
max-parents=7
max-attributes=11
min-public-methods=1
max-public-methods=25


[tool.pylint.'CLASSES']
defining-attr-methods="__init__,__new__,setUp"
valid-classmethod-first-arg="cls"
valid-metaclass-classmethod-first-arg="mcs"
exclude-protected="_asdict,_fields,_replace,_source,_make"


[tool.pylint.'IMPORTS']
deprecated-modules="regsub,TERMIOS,Bastion,rexec"

[tool.pylint.'EXCEPTIONS']
overgeneral-exceptions="Exception"

[tool.coverage.run]
omit = [
    '**/__init__.py',
    '**\test\**',
    '**/test/**',
    '**\contract_tests\**',
    '**/contract_tests/**',
    '**\hypothesis_strategies\**',
    '**/hypothesis_strategies/**',
    '**\interfaces\**',
    '**/interfaces/**',
    '**\node_modules\**',
    '**/node_modules/**',
    '**/venv/**',
    '**\venv\**',
    '**/.venv/**',
    '**\.venv\**',
    '**/test_common/**',
    '**\test_common\**',
    'src/config/**',
    'src\config\**',
    'src/protos/**',
    'src\protos\**',
    '/usr/local/lib/**',
    '**/.local/lib/**',
    '/usr/lib/**',
]

[tool.coverage.report]
omit = [
    '**/__init__.py',
    '**\test\**',
    '**/test/**',
    '**\contract_tests\**',
    '**/contract_tests/**',
    '**\hypothesis_strategies\**',
    '**/hypothesis_strategies/**',
    '**\interfaces\**',
    '**/interfaces/**',
    '**\node_modules\**',
    '**/node_modules/**',
    '**/venv/**',
    '**\venv\**',
    '**/.venv/**',
    '**\.venv\**',
    '**/test_common/**',
    '**\test_common\**',
    'src/config/**',
    'src\config\**',
    'src/protos/**',
    'src\protos\**',
    '/usr/local/lib/**',
    '**/.local/lib/**',
    '/usr/lib/**',
]
show_missing=true
fail_under=90
